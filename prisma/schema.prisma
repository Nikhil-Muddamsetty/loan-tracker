// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum InterestType {
  SIMPLE
  COMPOUND
}

enum RepaymentFrequency {
  ANNUALLY
  SEMI_ANNUALLY
  QUARTERLY
  MONTHLY
  BI_WEEKLY
  WEEKLY
  DAILY
}

enum LoanStatus {
  ACTIVE
  COMPLETED
  DEFAULTED
  CANCELLED
}

enum AccountStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  DELETED
}

enum EmailForCommunication {
  CUSTOM
  GOOGLE
}

model User {
  id                    Int                      @id @default(autoincrement())
  first_name            String?
  last_name             String?
  created_at            DateTime                 @default(now())
  updated_at            DateTime                 @updatedAt
  status                AccountStatus?              @default(ACTIVE)
  mark_for_deletion     Boolean?                 @default(false)
  lent                  Loan[]                   @relation("lender_id")
  borrowed              Loan[]                   @relation("borrower_id")
  auth                  Auth?                  

  @@map("users")
}

model Auth {
  id                    Int                      @id @default(autoincrement())
  user                  User                     @relation(fields: [user_id], references: [id])
  user_id               Int                      @unique()
  email                 EmailForCommunication    @unique @default(CUSTOM)
  custom_email_id       String?
  google_user_id        String?
  google_email_id       String?
  created_at            DateTime                 @default(now())
  updated_at            DateTime                 @updatedAt
  status                AccountStatus?           @default(ACTIVE)
  mark_for_deletion     Boolean?                 @default(false)
  sessions              Session[]
  
  @@map("auths")
}

model Session {
  id                    Int                      @id @default(autoincrement())
  auth                  Auth                     @relation(fields: [auth_id], references: [id])
  auth_id               Int
  jti                   String                   @unique
  created_at            DateTime                 @default(now())
  updated_at            DateTime                 @updatedAt
  mark_for_deletion     Boolean?                 @default(false)

  @@map("sessions")
}

model Loan {
  id                    Int                     @id @default(autoincrement())
  currency              String
  amount                Float
  interest_rate         Float
  interest_type         InterestType            @default(SIMPLE)
  repayment_frequency   RepaymentFrequency
  term                  Int
  lent_on               DateTime
  created_at            DateTime                 @default(now())
  updated_at            DateTime                 @updatedAt
  status                LoanStatus?              @default(ACTIVE)
  mark_for_deletion     Boolean?                 @default(false)
  repayments            Repayment[]
  lender                User                     @relation("lender_id",fields: [lender_id], references: [id])
  lender_id             Int                      
  borrower              User?                    @relation("borrower_id",fields: [borrower_id], references: [id]) 
  borrower_id           Int?            
  borrower_email        String?                  
  borrower_phone        String?

   @@map("loans")
}

model Repayment {
  id                    Int                     @id @default(autoincrement())
  loan                  Loan                    @relation(fields: [loan_id], references: [id])
  loan_id               Int
  currency              String
  total_due             Float
  amount                Float
  interest              Float
  principal             Float
  due_date              DateTime?                
  payment_date          DateTime?
  created_at            DateTime                 @default(now())
  updated_at            DateTime                 @updatedAt
  status                LoanStatus?              @default(ACTIVE)
  mark_for_deletion     Boolean?                 @default(false)

   @@map("repayments")
}